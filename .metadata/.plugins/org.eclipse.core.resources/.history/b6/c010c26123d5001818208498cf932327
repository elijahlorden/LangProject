package assembler;

import java.util.HashMap;

public class GlobalContext {
	private static byte[] memory = new byte[32767]; //Main memory
	private static HashMap<String, Integer> globals = new HashMap<String, Integer>(); //Holds global addresses
	private static HashMap<Integer, String> globalRefs = new HashMap<Integer, String>(); //Holds locations that link to global addresses
	
	private static int linkPointer = 3; //Holds the next free address in memory (the first 3 bytes hold the boot address, or global 'bootRoutine')
	
	
	
	
	public static void linkGlobals() { //Update locations that reference globals to the correct addresses, and link the boot address (should not be done until all programs are linked)
		
	}
	
	public static void linkProgram() { //Take in an assembled program and link it with the global program space
		
	}
	
	
	
	
	
	
}
